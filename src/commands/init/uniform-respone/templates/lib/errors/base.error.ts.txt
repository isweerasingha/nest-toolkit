import { HttpStatus } from '@nestjs/common';
import {
  ErrorMessageConfig,
  NestUniformExceptionConfig,
} from '../types/exception.types';

/**
 * Base error class for the application. All custom domain-specific
 * errors should extend this class.
 * It ensures that all errors have a consistent structure.
 */
export class NestUniformError extends Error {
  public readonly code: string;
  public readonly httpStatus: HttpStatus;
  public readonly config?: NestUniformExceptionConfig;
  public readonly messageConfig?: NestUniformExceptionConfig;

  constructor(
    errorMessageConfig: ErrorMessageConfig,
    config?: NestUniformExceptionConfig,
  ) {
    if (!errorMessageConfig) {
      super('An unexpected error occurred.');
      this.code = 'UNKNOWN_ERROR';
      this.httpStatus = HttpStatus.INTERNAL_SERVER_ERROR;
      this.name = this.constructor.name;
      this.config = config;
      return;
    }

    super(errorMessageConfig.message);
    this.code = errorMessageConfig.code;
    this.httpStatus = errorMessageConfig.httpStatus;
    this.name = this.constructor.name;
    this.config = config;
    this.messageConfig = errorMessageConfig.config;
  }
}
